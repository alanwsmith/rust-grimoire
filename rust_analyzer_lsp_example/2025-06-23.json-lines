{"timestamp":"2025-06-23T01:09:52.931331Z","level":"DEBUG","fields":{"message":"Starting generic LSP server"},"target":"rust_analyzer_lsp_example"}
{"timestamp":"2025-06-23T01:09:52.931491Z","level":"DEBUG","fields":{"message":"Defining server capabilities"},"target":"rust_analyzer_lsp_example::server_capabilities"}
{"timestamp":"2025-06-23T01:09:52.935575Z","level":"DEBUG","fields":{"message":"Starting main loop"},"target":"rust_analyzer_lsp_example::main_loop"}
{"timestamp":"2025-06-23T01:09:52.935635Z","level":"TRACE","fields":{"message":"DidOpenTextDocumentParams { text_document: TextDocumentItem { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), language_id: \"lsptest\", version: 0, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa \\n\" } }"},"target":"rust_analyzer_lsp_example::notifications::did_open_text_document"}
{"timestamp":"2025-06-23T01:09:52.936102Z","level":"TRACE","fields":{"message":"(RequestId(I32(2)), SemanticTokensParams { work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) } })"},"target":"rust_analyzer_lsp_example::requests::semantic_tokens_full"}
{"timestamp":"2025-06-23T01:09:54.935036Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 5 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa S\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:54.935129Z","level":"TRACE","fields":{"message":"(RequestId(I32(3)), CompletionParams { text_document_position: TextDocumentPositionParams { text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) }, position: Position { line: 12, character: 7 } }, work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, context: Some(CompletionContext { trigger_kind: Invoked, trigger_character: None }) })"},"target":"rust_analyzer_lsp_example::requests::completion"}
{"timestamp":"2025-06-23T01:09:55.083773Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 7 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDF\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:55.264198Z","level":"TRACE","fields":{"message":"(RequestId(I32(4)), SemanticTokensParams { work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) } })"},"target":"rust_analyzer_lsp_example::requests::semantic_tokens_full"}
{"timestamp":"2025-06-23T01:09:55.448484Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 8 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDFa\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:55.597949Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 11 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDFasdf\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:55.756334Z","level":"TRACE","fields":{"message":"(RequestId(I32(5)), SemanticTokensParams { work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) } })"},"target":"rust_analyzer_lsp_example::requests::semantic_tokens_full"}
{"timestamp":"2025-06-23T01:09:56.249685Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 12 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDFasdf \\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:56.449373Z","level":"TRACE","fields":{"message":"(RequestId(I32(6)), SemanticTokensParams { work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) } })"},"target":"rust_analyzer_lsp_example::requests::semantic_tokens_full"}
{"timestamp":"2025-06-23T01:09:56.730940Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 13 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDFasdf .\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:56.932931Z","level":"TRACE","fields":{"message":"(RequestId(I32(7)), SemanticTokensParams { work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) } })"},"target":"rust_analyzer_lsp_example::requests::semantic_tokens_full"}
{"timestamp":"2025-06-23T01:09:57.208834Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 14 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDFasdf .a\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:57.210867Z","level":"TRACE","fields":{"message":"(RequestId(I32(8)), CompletionParams { text_document_position: TextDocumentPositionParams { text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) }, position: Position { line: 12, character: 16 } }, work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, context: Some(CompletionContext { trigger_kind: Invoked, trigger_character: None }) })"},"target":"rust_analyzer_lsp_example::requests::completion"}
{"timestamp":"2025-06-23T01:09:57.411510Z","level":"TRACE","fields":{"message":"(RequestId(I32(9)), SemanticTokensParams { work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) } })"},"target":"rust_analyzer_lsp_example::requests::semantic_tokens_full"}
{"timestamp":"2025-06-23T01:09:57.529691Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 15 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDFasdf .al\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:57.678674Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 16 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDFasdf .alf\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:57.836886Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 17 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDFasdf .alfa\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:57.956300Z","level":"TRACE","fields":{"message":"(RequestId(I32(10)), SemanticTokensParams { work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) } })"},"target":"rust_analyzer_lsp_example::requests::semantic_tokens_full"}
{"timestamp":"2025-06-23T01:09:58.055817Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 18 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDFasdf .alfa\\n\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:58.256303Z","level":"TRACE","fields":{"message":"(RequestId(I32(11)), SemanticTokensParams { work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) } })"},"target":"rust_analyzer_lsp_example::requests::semantic_tokens_full"}
{"timestamp":"2025-06-23T01:09:58.539472Z","level":"TRACE","fields":{"message":"(RequestId(I32(12)), DocumentFormattingParams { text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) }, options: FormattingOptions { tab_size: 2, insert_spaces: true, properties: {}, trim_trailing_whitespace: None, insert_final_newline: None, trim_final_newlines: None }, work_done_progress_params: WorkDoneProgressParams { work_done_token: None } })"},"target":"rust_analyzer_lsp_example::requests::formatting"}
{"timestamp":"2025-06-23T01:09:58.539940Z","level":"TRACE","fields":{"message":"DidChangeTextDocumentParams { text_document: VersionedTextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }), version: 19 }, content_changes: [TextDocumentContentChangeEvent { range: None, range_length: None, text: \".alfa bravo alfa \\n.etc alfa alfa bravo alfa \\n.\\n.alfa  this  asdf asdfl asdf more to the thing\\n. \\n. alfa \\n.\\n. is alfa with alfa  asdf\\n.alfa \\n.\\n.alfa\\n.asf\\n.alfa SDFasdf .alfa\\n.\\n\" }] }"},"target":"rust_analyzer_lsp_example::notifications::did_change_text_document"}
{"timestamp":"2025-06-23T01:09:58.740526Z","level":"TRACE","fields":{"message":"(RequestId(I32(13)), SemanticTokensParams { work_done_progress_params: WorkDoneProgressParams { work_done_token: None }, partial_result_params: PartialResultParams { partial_result_token: None }, text_document: TextDocumentIdentifier { uri: Uri(Uri { scheme: Some(\"file\"), authority: Some(Authority { userinfo: None, host: Host { text: \"\", data: RegName(\"\") }, port: None }), path: \"/Users/alan/workshop/rust-grimoire/rust_analyzer_lsp_example/test-stuff/nvim-check.lsptest\", query: None, fragment: None }) } })"},"target":"rust_analyzer_lsp_example::requests::semantic_tokens_full"}
